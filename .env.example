# .env.example
# Copy this file to .env and fill in your actual values

# OpenAI Configuration
OPENAI_API_KEY=sk-your-openai-api-key-here

# Metabase Configuration  
METABASE_URL=https://your-metabase-instance.com
METABASE_DATABASE_ID=your_database_id

# Frontend Configuration
FRONTEND_URL=http://localhost:3000

---

# setup.ps1 (PowerShell script for Windows)
# Quick setup script for Windows 11

Write-Host "üê≥ SQL Chatbot Docker Setup for Windows 11" -ForegroundColor Cyan
Write-Host "=========================================" -ForegroundColor Cyan

# Check if Docker is installed
try {
    $dockerVersion = docker --version
    Write-Host "‚úÖ Docker found: $dockerVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker not found. Please install Docker Desktop first." -ForegroundColor Red
    Write-Host "Download from: https://www.docker.com/products/docker-desktop/" -ForegroundColor Yellow
    exit 1
}

# Check if docker-compose is available
try {
    $composeVersion = docker-compose --version
    Write-Host "‚úÖ Docker Compose found: $composeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker Compose not found." -ForegroundColor Red
    exit 1
}

# Create .env file if it doesn't exist
if (-not (Test-Path ".env")) {
    if (Test-Path ".env.example") {
        Copy-Item ".env.example" ".env"
        Write-Host "‚úÖ Created .env file from .env.example" -ForegroundColor Green
        Write-Host "‚ö†Ô∏è  Please edit .env file with your actual values!" -ForegroundColor Yellow
    } else {
        Write-Host "‚ùå .env.example not found. Please create .env manually." -ForegroundColor Red
    }
} else {
    Write-Host "‚úÖ .env file already exists" -ForegroundColor Green
}

# Ask user which mode to run
Write-Host ""
Write-Host "Choose running mode:" -ForegroundColor Cyan
Write-Host "1. Development mode (with hot reload)" -ForegroundColor White
Write-Host "2. Production mode" -ForegroundColor White
$choice = Read-Host "Enter your choice (1 or 2)"

switch ($choice) {
    "1" {
        Write-Host "üöÄ Starting in Development mode..." -ForegroundColor Green
        docker-compose -f docker-compose.dev.yml up --build
    }
    "2" {
        Write-Host "üöÄ Starting in Production mode..." -ForegroundColor Green
        docker-compose up --build
    }
    default {
        Write-Host "‚ùå Invalid choice. Please run the script again." -ForegroundColor Red
        exit 1
    }
}

---

# setup.sh (Bash script for Unix-like systems)
#!/bin/bash

echo "üê≥ SQL Chatbot Docker Setup"
echo "============================"

# Check if Docker is installed
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker not found. Please install Docker first."
    exit 1
fi
echo "‚úÖ Docker found: $(docker --version)"

# Check if docker-compose is available
if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose not found."
    exit 1
fi
echo "‚úÖ Docker Compose found: $(docker-compose --version)"

# Create .env file if it doesn't exist
if [ ! -f ".env" ]; then
    if [ -f ".env.example" ]; then
        cp .env.example .env
        echo "‚úÖ Created .env file from .env.example"
        echo "‚ö†Ô∏è  Please edit .env file with your actual values!"
    else
        echo "‚ùå .env.example not found. Please create .env manually."
    fi
else
    echo "‚úÖ .env file already exists"
fi

# Ask user which mode to run
echo ""
echo "Choose running mode:"
echo "1. Development mode (with hot reload)"
echo "2. Production mode"
read -p "Enter your choice (1 or 2): " choice

case $choice in
    1)
        echo "üöÄ Starting in Development mode..."
        docker-compose -f docker-compose.dev.yml up --build
        ;;
    2)
        echo "üöÄ Starting in Production mode..."
        docker-compose up --build
        ;;
    *)
        echo "‚ùå Invalid choice. Please run the script again."
        exit 1
        ;;
esac